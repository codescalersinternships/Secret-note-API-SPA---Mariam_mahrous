{
    "swagger": "2.0",
    "info": {
        "description": "A secret note api in go using Gin framework",
        "title": "Secret-Note API/SPA",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "paths": {
        "/login": {
            "post": {
                "description": "Login --Authenticate a user and return a token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Log in a user",
                "parameters": [
                    {
                        "description": "User credentials",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_codescalersinternships_Secret-note-API-SPA-Mariam_mahrous_models.CreateUserInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "schema": {
                            "$ref": "#/definitions/github_com_codescalersinternships_Secret-note-API-SPA-Mariam_mahrous_models.User"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/github_com_codescalersinternships_Secret-note-API-SPA-Mariam_mahrous_models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Invalid email or password",
                        "schema": {
                            "$ref": "#/definitions/github_com_codescalersinternships_Secret-note-API-SPA-Mariam_mahrous_models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/note": {
            "get": {
                "description": "Retrieve all notes for the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Get all notes for the authenticated user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/github_com_codescalersinternships_Secret-note-API-SPA-Mariam_mahrous_models.Note"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/github_com_codescalersinternships_Secret-note-API-SPA-Mariam_mahrous_models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/note/create": {
            "post": {
                "description": "Create a new note for the authenticated user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Create a new note",
                "parameters": [
                    {
                        "description": "Note data",
                        "name": "note",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_codescalersinternships_Secret-note-API-SPA-Mariam_mahrous_models.CreateNoteInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Bearer token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Note created successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_codescalersinternships_Secret-note-API-SPA-Mariam_mahrous_models.Note"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/github_com_codescalersinternships_Secret-note-API-SPA-Mariam_mahrous_models.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized access",
                        "schema": {
                            "$ref": "#/definitions/github_com_codescalersinternships_Secret-note-API-SPA-Mariam_mahrous_models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/note/{uuid}": {
            "get": {
                "description": "Retrieve a note by its UUID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Get note by UUID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Note UUID",
                        "name": "uuid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "schema": {
                            "$ref": "#/definitions/github_com_codescalersinternships_Secret-note-API-SPA-Mariam_mahrous_models.Note"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID format",
                        "schema": {
                            "$ref": "#/definitions/github_com_codescalersinternships_Secret-note-API-SPA-Mariam_mahrous_models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Note not found",
                        "schema": {
                            "$ref": "#/definitions/github_com_codescalersinternships_Secret-note-API-SPA-Mariam_mahrous_models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Sign Up --- Create a new user account.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Sign up a new user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/github_com_codescalersinternships_Secret-note-API-SPA-Mariam_mahrous_models.CreateUserInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "schema": {
                            "$ref": "#/definitions/github_com_codescalersinternships_Secret-note-API-SPA-Mariam_mahrous_models.User"
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "schema": {
                            "$ref": "#/definitions/github_com_codescalersinternships_Secret-note-API-SPA-Mariam_mahrous_models.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Can't create user",
                        "schema": {
                            "$ref": "#/definitions/github_com_codescalersinternships_Secret-note-API-SPA-Mariam_mahrous_models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_codescalersinternships_Secret-note-API-SPA-Mariam_mahrous_models.CreateNoteInput": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "expiration_date": {
                    "type": "string"
                },
                "max_views": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "github_com_codescalersinternships_Secret-note-API-SPA-Mariam_mahrous_models.CreateUserInput": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "github_com_codescalersinternships_Secret-note-API-SPA-Mariam_mahrous_models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "github_com_codescalersinternships_Secret-note-API-SPA-Mariam_mahrous_models.Note": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "current_views": {
                    "type": "integer"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "expiration_date": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "max_views": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "unique_url": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "github_com_codescalersinternships_Secret-note-API-SPA-Mariam_mahrous_models.User": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "token": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        }
    }
}